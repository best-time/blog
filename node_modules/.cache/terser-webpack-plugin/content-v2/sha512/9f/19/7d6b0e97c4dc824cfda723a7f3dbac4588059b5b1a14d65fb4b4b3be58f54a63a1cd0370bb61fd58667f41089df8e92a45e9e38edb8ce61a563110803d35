{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{771:function(t,s,a){\"use strict\";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"循环引用的坑点\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#循环引用的坑点\"}},[t._v(\"#\")]),t._v(\" 循环引用的坑点\")]),t._v(\" \"),a(\"p\",[t._v(\"在组件开发中引用方式写法如下:\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-tsx extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-tsx\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" Popup \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"from\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'../Popup'\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" List \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"from\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'../List'\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"console\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"Popup\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" List\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// f Popup f List\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"而不要使用如下写法:\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-tsx extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-tsx\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"import\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" Popup\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" List \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"from\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'../index'\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 这样子引用会带进当前开发的组件本省\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"console\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"Popup\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" List\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// undefined undefined\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"原因是因为下面这种写法会带进当前开发的组件本身从而导致循环引用。循环引用会导致在编译态输出的结果为 undefined。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"为什么要受控模式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么要受控模式\"}},[t._v(\"#\")]),t._v(\" 为什么要受控模式\")]),t._v(\" \"),a(\"p\",[t._v(\"尽管受控模式相对非受控模式会多传入 \"),a(\"code\",[t._v(\"value\")]),t._v(\"、\"),a(\"code\",[t._v(\"onChange\")]),t._v(\" 属性, 但它能有效避免组件库中碰到的一些反模式的坑。\")]),t._v(\" \"),a(\"p\",[t._v(\"在 Dan 的 \"),a(\"a\",{attrs:{href:\"https://overreacted.io/writing-resilient-components/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"编写具有弹性的组件\"),a(\"OutboundLink\")],1),t._v(\"一文中写到如下几个原则:\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"不要将 \"),a(\"code\",[t._v(\"props\")]),t._v(\" 赋给 \"),a(\"code\",[t._v(\"state\")])])]),t._v(\" \"),a(\"p\",[t._v(\"理由: 如果不结合 \"),a(\"code\",[t._v(\"componentDidUpdate\")]),t._v(\" 使用会无法读取到更新的数据; 结合了 \"),a(\"code\",[t._v(\"componentDidUpdate\")]),t._v(\" 在其进行 \"),a(\"code\",[t._v(\"setState\")]),t._v(\" 又会进行多一次的 render。\")]),t._v(\" \"),a(\"p\",[t._v(\"解决方案\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"直接在 render 中获取父组件传下来的数据; 结合 useMemo 进行优化;\")]),t._v(\" \"),a(\"li\",[t._v(\"只使用受控组件或者只使用非受控组件;\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"针对一些复杂数据使用 useMemo 以及 memorize-one 进行处理。或者 \"),a(\"code\",[t._v(\"hooks\")]),t._v(\" 中在 render 内使用 \"),a(\"code\",[t._v(\"useMemo\")]),t._v(\"; \"),a(\"code\",[t._v(\"class\")]),t._v(\" 中在 render 内使用 \"),a(\"code\",[t._v(\"memorize-one\")])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"关于-typescript-与-defaultprops-的冲突\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关于-typescript-与-defaultprops-的冲突\"}},[t._v(\"#\")]),t._v(\" 关于 Typescript 与 DefaultProps 的冲突\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"class\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#class\"}},[t._v(\"#\")]),t._v(\" class\")]),t._v(\" \"),a(\"p\",[t._v(\"针对 \"),a(\"code\",[t._v(\"TypeScript\")]),t._v(\" 中的 \"),a(\"code\",[t._v(\"interface\")]),t._v(\" 中必填可填(是否带 ? 可选)与 React 中的 \"),a(\"code\",[t._v(\"defaultProps\")]),t._v(\" 是不兼容的。造成的影响是 \"),a(\"code\",[t._v(\"defaultProps\")]),t._v(\" 里若是不填写完整 \"),a(\"code\",[t._v(\"TypeScript\")]),t._v(\" 中的 \"),a(\"code\",[t._v(\"interface\")]),t._v(\" 属性则会标红。为了解决这个现象解决方案如下：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-ts extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-ts\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"interface\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  mustFillIn\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"number\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  mayFillWithDefaultValue\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"number\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 可选的带默认值的不用带上问号\")]),t._v(\"\\n  mayFillWithoutDefaultValue\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"number\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 可选的不带默认值的带上问号\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"在 \"),a(\"code\",[t._v(\"TypeScript\")]),t._v(\" 中书写 \"),a(\"code\",[t._v(\"React\")]),t._v(\" 时可以这样:\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-ts extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-ts\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Divider\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"extends\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"React\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"Component\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"DividerProps\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token builtin\"}},[t._v(\"any\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\" defaultProps\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" Pick\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"DividerProps\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'mayFillWithDefaultValue'\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"|\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'mayFillWithoutDefaultValue'\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    mayFillWithDefaultValue\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"12345\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"render\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"div\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"demo\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"div\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[t._v(\"Pick 针对有必传值的场景做区分\")]),t._v(\" \"),a(\"li\",[t._v(\"interface 中的 ? 针对有默认值和无默认值做区分\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"hooks\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#hooks\"}},[t._v(\"#\")]),t._v(\" hooks\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"http://with.muyunyun.cn/764623d18eeb45724da661a0b6fbb679.jpg\",alt:\"\"}})]),t._v(\" \"),a(\"h3\",{attrs:{id:\"组件异步的设计\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件异步的设计\"}},[t._v(\"#\")]),t._v(\" 组件异步的设计\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"方式一: 使用方通过返回 Promise 来告知组件已完成异步操作;\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"demo\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Promise\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"resolve\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setTimeout\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'模拟异步接口'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"resolve\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"ul\",[a(\"li\",[t._v(\"方式二: 使用方通过调用 \"),a(\"code\",[t._v(\"done()\")]),t._v(\" 来告知组件已完成异步操作;(组件内完成对 Promise 的封装)\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"demo\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"done\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setTimeout\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'模拟异步接口'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"done\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2000\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"从组件设计的角度来说, 方式一对组件内部的维护更加友好; 从使用者的角度来说, 方式二的使用更为便捷, 但是重构的成本会变大。\")]),t._v(\" \"),a(\"p\",[t._v(\"如下是针对方式二的组件的封装方式。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 此处 fn 为外面传入的 demo 函数\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"fn\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Promise\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"resolve\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" any\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"resolve\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"then\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"组件样式覆盖的问题\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件样式覆盖的问题\"}},[t._v(\"#\")]),t._v(\" 组件样式覆盖的问题\")]),t._v(\" \"),a(\"p\",[t._v(\"背景: 业务 a 使用了组件包 b 以及工具包 c, 其中 c 也依赖了旧版本的 b。此时业务 a 中会有两个组件包 b 的样式, 此时会碰到修改了组件包 b 的样式, 而样式被老版本的 b 覆盖的情况。这个时候有什么解决方法呢?\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"方案一: 打包给样式带上版本号;\")]),t._v(\" \"),a(\"li\",[t._v(\"方案二: 让工具包 c 把组件包 b 放在 \"),a(\"code\",[t._v(\"pureDependencies\")]),t._v(\" 中, 业务方的 \"),a(\"code\",[t._v(\"dependency\")]),t._v(\" 统一维护组件包 b;\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"业务中同时使用-button-组件-包含-icon-组件-与-icon-组件如何避免-icon-组件的样式打入两份\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#业务中同时使用-button-组件-包含-icon-组件-与-icon-组件如何避免-icon-组件的样式打入两份\"}},[t._v(\"#\")]),t._v(\" 业务中同时使用 Button 组件(包含 Icon 组件) 与 Icon 组件如何避免 Icon 组件的样式打入两份?\")]),t._v(\" \"),a(\"p\",[t._v(\"方法: src 目录下的组件中的 style 文件中建立 index.tsx 文件\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"开源计划\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#开源计划\"}},[t._v(\"#\")]),t._v(\" 开源计划\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"完善 mobile 组件在 pc 端站点的浏览效果;\")]),t._v(\" \"),a(\"li\",[t._v(\"beast-mobile 语言包支持、为后续站点切换双语环境做准备;\")]),t._v(\" \"),a(\"li\",[t._v(\"beast-mobile 中、英文文章简版输出, 调研专栏环境社区的创建(Medium、Twitter、知乎、Github、StackOverflow、SegmentFault);\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"组件通用-api-设计\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件通用-api-设计\"}},[t._v(\"#\")]),t._v(\" 组件通用 API 设计\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"onDisabled: (record: T) => boolean\\n\"),a(\"ul\",[a(\"li\",[t._v(\"ListView、Checkbox 组件公用;\")]),t._v(\" \"),a(\"li\",[t._v(\"场景: 提供给业务更加充分的控制权\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"link\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#link\"}},[t._v(\"#\")]),t._v(\" link\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"a\",{attrs:{href:\"https://dev.to/selbekk/the-10-component-commandments-2a7f\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"The 10 Component Commandments\"),a(\"OutboundLink\")],1),t._v(\": 组件开发方法总结, 读下来感觉不错;\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"组件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件\"}},[t._v(\"#\")]),t._v(\" 组件\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"p\",[t._v(\"scss\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"语义化样式模板\")]),t._v(\" \"),a(\"li\",[t._v(\"关联计算逻辑\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"post-install\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"e2e 测试\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"random notes\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"沉淀一些常⻅的测试模式, 并形成易用的 utils (mock & helper) 一些参考关键词 : date, timer, async & promise, random, user-agent, browser feature detect, console, process.env, jsdom layout\")]),t._v(\" \"),a(\"li\",[t._v(\"科学使用 snapshot\")]),t._v(\" \"),a(\"li\",[t._v(\"jest 的 test.todo 挺不错\")]),t._v(\" \"),a(\"li\",[t._v(\"通过写测试的过程, 反过来思考组件发现遗漏 Edge cases, 实现 是否合理\\n可能 react-testing-library 会更好 (enzyme 可直接访问 state, 容易写出一些没意义的测试)\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"sass 技巧\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"沉淀 function utils, 并统一维护\\n• 善用 list & map 维护枚举型配置\\n• 善用 \"),a(\"code\",[t._v(\"interpolation\")]),t._v(\", 让同质化分支模版化\\n• 逻辑关系组织 : 如 “颜色管理方案”\")])])]),t._v(\" \"),a(\"li\",[a(\"p\",[a(\"a\",{attrs:{href:\"https://github.com/plopjs/plop\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"plop\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"将重复性繁琐工作打包\")]),t._v(\" \"),a(\"li\",[t._v(\"善用内容型模板\\n\"),a(\"ul\",[a(\"li\",[t._v(\"创建一个 组件子包\\n• 创建一个 React 组件 (class or functional)\\n• 创建一个完整的 demo ⻚面\\n• 创建一个单独的 demo case\\n• 将组件追加到某个合包里\")])])])])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"如何统计组件使用量\")]),t._v(\" \"),a(\"p\",[t._v(\"DRY 原则: Don't Repeat Youself\")])])]),t._v(\" \"),a(\"p\",[t._v(\"Some of these CSS properties have shorthand versions that use the namespace as the property name. For these, you can write both the shorthand value and the more explicit nested versions.\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-scss extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-scss\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token selector\"}},[t._v(\".info-page \")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token selector\"}},[t._v(\"margin: auto \")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v(\"bottom\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" 10px\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token property\"}},[t._v(\"top\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" 2px\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"组件属性间尽量减少耦合关系\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组件属性间尽量减少耦合关系\"}},[t._v(\"#\")]),t._v(\" 组件属性间尽量减少耦合关系\")]),t._v(\" \"),a(\"p\",[t._v(\"比如添加了 A 属性 B 属性在某些情况会失效。又或者 C 属性必须在 D 属性存在的时候才生效。\")]),t._v(\" \"),a(\"p\",[t._v(\"比如以 Upload 组件为例: 背景逻辑是: 最大上传图片数量是 2, 当上传了 2 张图片以后就不显示继续上传了。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"showAdd\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" selectable\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" maxLength\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" files \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"props\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"maxLength \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"undefined\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"files\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">=\")]),t._v(\" maxLength\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" selectable\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"业务方举了反例: 例如有些商品图片是标品，图片是平台自己控制的，也许不满足最大数，但是不允许商家去修改的。\\n配置了 maxLength={10}, 图片数量只有 3 张时, 不显示增加按钮的需求当前就不能实现。\")])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}