{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[321],{859:function(t,n,e){\"use strict\";e.r(n);var a=e(12),s=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h2\",{attrs:{id:\"css有哪些基本选择器\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css有哪些基本选择器\"}},[t._v(\"#\")]),t._v(\" CSS有哪些基本选择器\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"\\n类选择器、属性选择器 ID选择器\\n\\n内联样式（非元素器）的优先级可看成1.0.0.0。\\n\\nID选择器的优先级为0.1.0.0。\\n\\n类属性选择器、属性选择器、伪类的优先级为0.0.1.0。\\n\\n元素选择器、伪元素选择器的优先级为0.0.0.1\\n\\n！important>style（内联）>ld（权重100）> class（权重10）>标签（权重1）。同类别的样式中，后面的会覆盖前面的\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"引入方式\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#引入方式\"}},[t._v(\"#\")]),t._v(\" 引入方式\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"\\nCSS有3种引入方式:\\n行内式是指将样式写在元素的 style属性内。\\n内嵌式是指将样式写在 style元素内。\\n外链式是指通过link标签，引入CSS文件内的样式。\\n\\nlink标签引入样式与通过@ import方法引入样式有如下区别:\\n（1）加载资源的限制。\\nlink是 XHTML的标签，除了加载CSS文件外，还可以加载RSS等其他事务，如加载模板等。\\n@ import只能加载CSS文件。\\n\\n（2）加载方式。\\n如果用link引用CSS，在页面载入时同时加载，即同步加载。\\n如果用@ import引用CSS，则需要等到网页完全载入后，再加载CSS文件，即异步加载。\\n\\n（3）兼容性。\\nlink是 XHTML的标签，没有兼容问题。\\n@ import是在CSS2.1中提出的，不支持低版本的浏览器。\\n\\n（4）改变样式\\nlink的标签是DOM元素，支持使用 JavaScript控制DOM和修改样式；@ import是种方法，不支持控制DOM和修改样式。\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"浮动元素引起的问题和解决方法\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#浮动元素引起的问题和解决方法\"}},[t._v(\"#\")]),t._v(\" 浮动元素引起的问题和解决方法\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v('\\n引起的问题有如下几个。\\n（1）父元素的高度无法被撑开，影响与父元素同级的元素。\\n（2）与元素同级的非浮动元素会紧随其后（类似遮盖现象）。\\n（3）如果一个元素浮动，则该元素之前的元素也需要浮动；否则，会影响页面显示的结构（即通常所说的串行现象）。\\n\\n解决方法如下：\\n（1）为父元素设置固定高度。\\n（2）为父元素设置 overflow:hidden即可清除浮动，让父元素的高度被撑开。 BFC\\n（3）用 clear:both样式属性清除元素浮动。\\n注意：如果只有左浮动或只有右浮动，可以单独设置 clear:left或 clear:right，但是设置clear:both则都可以解决，所以此方法在工作中用得更多。\\n（4）外墙法是指在父元素外面，添加“一道墙”，设置属性 clear:both\\n（5）内墙法是指在父元素内部，浮动元素的最后面，添加“一道墙”，设置属性 clear:both\\n（6）伪元素是指为了少创建元素，对父元素添加afer伪元素，设置属性\\n{content：\"\"；display ：block；clear:both;}\\n注意：这里所说的少创建元素，实际上并没有少创建，添加的伪元素也是元素，只不过没有写在HTML文档中而已。\\n（7）使用通用类 clearfix, clearfix的实现如下：\\nclearfix:after {\\n  content \" \"；\\n  display:block;\\n  clear:both;\\n}\\n\\n')])])]),e(\"h2\",{attrs:{id:\"position的值分别是相对于哪个位置定位的\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#position的值分别是相对于哪个位置定位的\"}},[t._v(\"#\")]),t._v(\" position的值分别是相对于哪个位置定位的\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"\\nrelative表示相对定位，相对于自己本身所在正常文档流中的位置进行定位。\\nabsolute表示绝对定位，相对于最近一级（从直接父级元素往上数，直到根元素）定位，相对于 statIc的父元素进行定位。\\nfixed用于生成绝对定位，相对于浏览器窗口或 frame进行定位。\\nstatIc是默认值，没有定位，元素出现在正常的文档流中。\\nsticky是生成黏性定位的元素，容器的位置根据正常文档流计算得出。\\n注意：CSS3的新增属性有点类似于 relative与 fixed的结合体。如果目标区域在屏幕中可见，表现为 relative；如果目标区域在屏幕中不可见，表现为fixed。\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"css的哪些样式可以继承-哪些不可以继承\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css的哪些样式可以继承-哪些不可以继承\"}},[t._v(\"#\")]),t._v(\" CSS的哪些样式可以继承？哪些不可以继承\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"\\n可继承的样式有font- size font-family color, UL LI DL DD DT。\\n不可继承的样式有 border、 padding, margin, width、 height。\\n注意：为了方便辨识，与字体相关的样式通常可以继承，与尺寸相关的样式通常不能继承\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"display有哪些值-说明它们的作用。\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#display有哪些值-说明它们的作用。\"}},[t._v(\"#\")]),t._v(\" display有哪些值？说明它们的作用。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v('\\ndisplay的值有 block、none, inline、 inline- block、list-item、 table和 inherit。其作用如下。\\nblock是指块类型。默认宽度为父元素宽度，可设置宽高，换行显示。   none是指元素不会显示，已脱离文档流。\\ninline是指行内元素类型。默认宽度为内容宽度，不可设置宽高，同行显示。\\ninline- block是指默认宽度为内容宽度，可以设置宽高，同行显示。\\nlist-item是指像块类型元素一样显示，并添加样式列表标记。\\n注意：例如，用div模拟li元素<ul>< div style=\" display:list-item：\">有课前端网</d></ul>。\\ntable是指此元素会作为块级表格显示。\\ninherit是指从父元素继承 display属性的值。\\n\\n## content作用\\n\\n')])])]),e(\"p\",[t._v(\"content属性与：before及：after伪元素配合使用，用来插入生成的内容，可以在元素之前或之后放置生成的内容。可以插入文本、图像、引号，并可以结合计数器，为页面元素插入编号。比如，查看如下代码。\")]),t._v(\" \"),e(\"p\",[t._v('body{\\ncounter-reset:chapter；\\n}\\nh1:before{\\ncontent：\"第\" counter（ chapter）\"章\"\\n}\\nh1{\\ncounter-increment:chapter：\\n}\\n')]),e(\"h1\"),t._v(\" \"),e(\"h1\"),t._v(\" \"),e(\"h1\"),t._v(\"\\n使用 content属性，并结合 :before选择器和计数器 counter，可以在每个\"),e(\"h1\",[t._v(\"元素前插入新的内容\"),e(\"p\"),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"\\n\\n## BFC规范的理解\\n\")])])]),e(\"p\",[t._v(\"BFC（ Block Formatting Context）指块级格式化上下文，即一个创建了新的BFC的盒子是独立布局的，\\n盒子里面的子元素的样式不会影响到外面的元素。在同一个BFC中，两个毗邻的块级盒在垂直方向（和布局方向有关系）的 margin会发生折叠。\")]),t._v(\" \"),e(\"p\",[t._v(\"BFC决定元素如何对其内容进行布局，也决定与其他元素的关系和相互作用。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"\\n## 外边距重叠？重叠的结果是什么\\n\\n\")])])]),e(\"p\",[t._v(\"外边距重叠就是 margin- collapse在CSS中，相邻的两个盒子（可能是兄弟关系也可能是祖先关系）的外边距可以结合成一个单独的外边距。\\n这种合并外边距的方式称为折叠，因此而结合成的外边距称为折叠外边距。\")]),t._v(\" \"),e(\"p\",[t._v(\"折叠结果遵循下列计算规则。\\n（1）当两个相邻的外边距都是正数时，折叠的结果是它们两者中较大的值\\n（2）当两个相邻的外边距都是负数时，折叠的结果是两者中绝对值较大的值。\\n（3）当两个外边距一正一负时，折叠的结果是两者相加的和。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"\\n## 访问超链接后 hover样式就不出现的原因是什么？应该如何解决\\n\\n\")])])]),e(\"p\",[t._v(\"因为访问过的超链接样式覆盖了原有的 hover和 active伪类选择器样式，\\n解决方法是将CSS属性的排列顺序改为L→V→H→A（link, visited, hover, active）。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"\\n\\n## initial inherit unset revert\\n\\n\")])])]),e(\"p\",[t._v(\"最后罗列一下默认为 inherited: Yes 的属性：\")]),t._v(\" \"),e(\"p\",[t._v(\"所有元素可继承：visibility 和 cursor\\n内联元素可继承：letter-spacing、word-spacing、white-space、line-height、color、font、 font-family、font-size、font-style、font-variant、font-weight、text- decoration、text-transform、direction\\n块状元素可继承：text-indent和text-align\\n列表元素可继承：list-style、list-style-type、list-style-position、list-style-image\\n表格元素可继承：border-collapse\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\")])]),e(\"p\",[t._v(\"unset\\n名如其意，unset 关键字我们可以简单理解为不设置。其实，它是关键字 initial 和 inherit 的组合。\\n什么意思呢？也就是当我们给一个 CSS 属性设置了 unset 的话：\")]),t._v(\" \"),e(\"p\",[t._v(\"如果该属性是默认继承属性，该值等同于 inherit\\n如果该属性是非继承属性，该值等同于 initial\")]),t._v(\" \"),e(\"p\",[t._v(\"举个例子，先列举一些 CSS 中默认继承父级样式的属性：\")]),t._v(\" \"),e(\"p\",[t._v(\"部分可继承样式: font-size, font-family, color, text-indent\\n部分不可继承样式: border, padding, margin, width, height\")]),t._v(\" \"),e(\"p\",[t._v(\"revert\\nrevert 是更为新的一个关键字。源自于 CSS Cascading and Inheritance Level 3 (CSS Cascading 3)，直接意译的意思为 -- 恢复。\\n它与关键字 unset 非常类似，在大部分情况下，他们的作用是一模一样的！唯一的区别是：\")]),t._v(\" \"),e(\"p\",[t._v(\"revert：属性应用了该值后，将还原到具有由浏览器或用户创建的自定义样式表（在浏览器侧设置）设置的值\\nunset:  属性应用了该值后，样式将完全被还原\")]),t._v(\" \"),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"\\n\")])])])])])}),[],!1,null,null,null);n.default=s.exports}}]);","extractedComments":[]}