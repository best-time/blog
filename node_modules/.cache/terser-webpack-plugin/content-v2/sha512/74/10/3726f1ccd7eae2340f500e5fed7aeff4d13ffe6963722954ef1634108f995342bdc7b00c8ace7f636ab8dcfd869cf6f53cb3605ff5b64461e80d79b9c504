{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{570:function(t,e,a){\"use strict\";a.r(e);var l=a(12),v=Object(l.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"数量限定符\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数量限定符\"}},[t._v(\"#\")]),t._v(\" 数量限定符\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"数量限定符\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"解释\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"x+\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"1 或多个\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"x*\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"0 或多个\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"x?\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"0 或 1 个\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"x{n}\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"n 个\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"x{n,}\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"至少 n 个\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"x{n, m}\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"n 至 m 个, 遵循贪婪原则, 会尽可能匹配多个; 如果在后面加个 ? (如 x{n, m}?), 遵循非贪婪原则\")])])])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"贪婪可以理解成从后往前遍历, 非贪婪可以理解为从前向后遍历\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"字符限定符\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#字符限定符\"}},[t._v(\"#\")]),t._v(\" 字符限定符\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"字符限定符\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"解释\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"\\\\d\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"匹配一个数字字符, [0-9]\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"\\\\D\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"匹配一个非数字字符, [^0-9]\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"\\\\w\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"匹配单词字符(包括数字下划线在内), [0-9A-Za-z_]\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"\\\\W\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"匹配非单词字符(包括数字下划线在内), [^0-9A-Za-z_]\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"\\\\s\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"匹配空白字符(空格、回车、制表符)\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"\\\\S\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"匹配非空白字符   ◊\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\".\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"匹配\"),a(\"code\",[t._v(\"除换行符(\\\\n)以外\")]),t._v(\"的任何单个字符\")])])])]),t._v(\" \"),a(\"p\",[t._v(\"根据使用方法可以进行如下分类:\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"使用\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"解释\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"[0-9a-zA-Z]\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"范围字符\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"[abcd]\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"任意字符\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"[^a-z]\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"范围字符\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"定位符\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定位符\"}},[t._v(\"#\")]),t._v(\" 定位符\")]),t._v(\" \"),a(\"table\",[a(\"thead\",[a(\"tr\",[a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"定位符\")]),t._v(\" \"),a(\"th\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"解释\")])])]),t._v(\" \"),a(\"tbody\",[a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"^\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"开头标识\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"$\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"结尾标识\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"\\\\b\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"单词边界\")])]),t._v(\" \"),a(\"tr\",[a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[a(\"code\",[t._v(\"\\\\B\")])]),t._v(\" \"),a(\"td\",{staticStyle:{\"text-align\":\"left\"}},[t._v(\"非单词边界\")])])])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"转义符\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#转义符\"}},[t._v(\"#\")]),t._v(\" 转义符\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"\\\\\")]),t._v(\": 用于匹配某些特殊字符\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"/^(\\\\d)\\\\1+$/.test(333), 比如这里的 \\\\1 表示第一个括号里的值, 达到判断重复数字的效果\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"选择匹配符\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#选择匹配符\"}},[t._v(\"#\")]),t._v(\" 选择匹配符\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"|\")]),t._v(\": 可以匹配多个规则\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"特殊用法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#特殊用法\"}},[t._v(\"#\")]),t._v(\" 特殊用法\")]),t._v(\" \"),a(\"p\",[t._v(\"|   特殊用法    |              解释              |\\n| :----------- | :----------------------◊------ |\\n| \"),a(\"code\",[t._v(\"?=\")]),t._v(\" 正向预查 |   匹配以指定内容结束的字符串   |\\n| \"),a(\"code\",[t._v(\"?!\")]),t._v(\" 负向预查 | 匹配不是以指定内容结束的字符串 |\\n|      \"),a(\"code\",[t._v(\"?\")]),t._v(\"      | 不把选择匹配符的内容放到缓冲区 |\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"正则表达式在-javascript-下的使用方法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#正则表达式在-javascript-下的使用方法\"}},[t._v(\"#\")]),t._v(\" 正则表达式在 JavaScript 下的使用方法\")]),t._v(\" \"),a(\"p\",[t._v(\"在 JavaScript 下使用正则表达式, 有两种方法:\")]),t._v(\" \"),a(\"p\",[t._v(\"第一种方法: 使用 \"),a(\"code\",[t._v(\"RegExp\")]),t._v(\" 类\")]),t._v(\" \"),a(\"p\",[t._v(\"提供的方法有: (正则表达式在前面)\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"test(str)\")]),t._v(\": 在字符串匹配是否有匹配模式的字符串, 返回 \"),a(\"code\",[t._v(\"true/false\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"exec\")]),t._v(\": 如果正则表达式中有子表达式, 使用 \"),a(\"code\",[t._v(\"exec\")]),t._v(\" 方法, 返回 \"),a(\"code\",[t._v(\"result[0] = 匹配结果, result[1] = 子表达式 1 的匹配结果 ……\")])])]),t._v(\" \"),a(\"p\",[t._v(\"第二种方法是: 使用 \"),a(\"code\",[t._v(\"String\")]),t._v(\" 类\")]),t._v(\" \"),a(\"p\",[t._v(\"提供的方法有: (正则表达式在后面)\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"search\")]),t._v(\" 返回匹配模式的字符串出现的位置, 如果没有, 返回 -1;\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"match\")]),t._v(\" 返回匹配模式匹配到的字符串, 如果有, 返回数组, 无, 返回 null;\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"replace\")]),t._v(\" 将匹配模式匹配到的字符串进行替换;\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"split\")]),t._v(\" 将字符串已匹配模式为分隔符进行字符串分隔, 返回数组;\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"分析\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分析\"}},[t._v(\"#\")]),t._v(\" 分析\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'&ab='\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"match\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token regex\"}},[a(\"span\",{pre:!0,attrs:{class:\"token regex-delimiter\"}},[t._v(\"/\")]),a(\"span\",{pre:!0,attrs:{class:\"token regex-source language-regex\"}},[t._v(\"([^&]+)=\")]),a(\"span\",{pre:!0,attrs:{class:\"token regex-delimiter\"}},[t._v(\"/\")]),a(\"span\",{pre:!0,attrs:{class:\"token regex-flags\"}},[t._v(\"g\")])]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v('// [\"ab=\"]')]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"分析: ^ 一般表示开头, 但是注意此处中括号里的 \"),a(\"code\",[t._v(\"^\")]),t._v(\" 表示非\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"i、g、m\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#i、g、m\"}},[t._v(\"#\")]),t._v(\" i、g、m\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"/i: 忽略大小写\")]),t._v(\" \"),a(\"li\",[t._v(\"/g: 全局\")]),t._v(\" \"),a(\"li\",[t._v(\"/m: 多行查找\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"update\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#update\"}},[t._v(\"#\")]),t._v(\" update\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://github.com/tc39/proposal-regexp-lookbehind\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"?<=\"),a(\"OutboundLink\")],1),t._v(\": now support match from right to left.\")])])}),[],!1,null,null,null);e.default=v.exports}}]);","extractedComments":[]}