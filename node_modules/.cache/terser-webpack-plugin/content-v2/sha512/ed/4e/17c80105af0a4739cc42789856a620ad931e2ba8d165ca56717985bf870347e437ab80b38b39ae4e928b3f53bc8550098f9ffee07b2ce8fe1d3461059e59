{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{666:function(t,a,s){\"use strict\";s.r(a);var n=s(12),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h3\",{attrs:{id:\"title\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#title\"}},[t._v(\"#\")]),t._v(\" title\")]),t._v(\" \"),s(\"p\",[t._v(\"实现 strStr() 函数。\")]),t._v(\" \"),s(\"p\",[t._v(\"给定一个 haystack 字符串和一个 needle 字符串, 在 haystack 字符串中找出 needle 字符串出现的第一个位置 (从 0 开始)。如果不存在, 则返回  -1。\")]),t._v(\" \"),s(\"p\",[t._v(\"示例 1:\")]),t._v(\" \"),s(\"p\",[t._v('输入: haystack = \"hello\", needle = \"ll\"\\n输出: 2\\n示例 2:')]),t._v(\" \"),s(\"p\",[t._v('输入: haystack = \"aaaaa\", needle = \"bba\"\\n输出: -1\\n说明:')]),t._v(\" \"),s(\"p\",[t._v(\"当 needle 是空字符串时, 我们应当返回什么值呢？这是一个在面试中很好的问题。\")]),t._v(\" \"),s(\"p\",[t._v(\"对于本题而言, 当 needle 是空字符串时我们应当返回 0 。这与 C 语言的 strstr() 以及 Java 的 indexOf() 定义相符。\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"analyze\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#analyze\"}},[t._v(\"#\")]),t._v(\" analyze\")]),t._v(\" \"),s(\"p\",[t._v(\"后面需要改。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-js extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n * @param {string} haystack\\n * @param {string} needle\\n * @return {number}\\n */\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"strStr\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"haystack\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" needle\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" haystack\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"indexOf\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"needle\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}