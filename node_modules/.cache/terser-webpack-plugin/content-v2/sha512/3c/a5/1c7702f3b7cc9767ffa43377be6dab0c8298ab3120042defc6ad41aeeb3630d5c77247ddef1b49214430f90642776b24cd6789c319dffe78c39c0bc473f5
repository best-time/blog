{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{593:function(e,t,r){\"use strict\";r.r(t);var a=r(12),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[r(\"h3\",{attrs:{id:\"编译器\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编译器\"}},[e._v(\"#\")]),e._v(\" 编译器\")]),e._v(\" \"),r(\"p\",[e._v(\"编译器(compiler)的几个步骤\")]),e._v(\" \"),r(\"ul\",[r(\"li\",[e._v(\"词法分析(lexical analyze): 将程序代码拆分成若干个词;\")]),e._v(\" \"),r(\"li\",[e._v(\"语法分析(syntax analyze): 生成 AST 树;\")]),e._v(\" \"),r(\"li\",[e._v(\"语义分析(semantic analyze): 给 AST 树添加语义注释, 并生成 Symbol Table(判断是否有重复的命名空间等);\")]),e._v(\" \"),r(\"li\",[e._v(\"优化: 合并一些语句;\")]),e._v(\" \"),r(\"li\",[e._v(\"代码生成: 转换为低层级的语言;\")])]),e._v(\" \"),r(\"blockquote\",[r(\"p\",[e._v(\"解释器和编译器步骤大体相同, 只是解释器不会将代码转换为低层级语言执行。\")])]),e._v(\" \"),r(\"blockquote\",[r(\"p\",[r(\"a\",{attrs:{href:\"https://medium.com/hackernoon/compilers-and-interpreters-3e354a2e41cf\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Compilers and Interpreters\"),r(\"OutboundLink\")],1)])]),e._v(\" \"),r(\"ul\",[r(\"li\",[e._v(\"[ ]\"),r(\"a\",{attrs:{href:\"https://medium.com/hackernoon/lexical-analysis-861b8bfe4cb0\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Lexical Analysis\"),r(\"OutboundLink\")],1),e._v(\": 当前阅读到 Putting it all together, 后续如果要写词法解析器的需求可以结合这篇文章进行实践。\")])])])}),[],!1,null,null,null);t.default=n.exports}}]);","extractedComments":[]}