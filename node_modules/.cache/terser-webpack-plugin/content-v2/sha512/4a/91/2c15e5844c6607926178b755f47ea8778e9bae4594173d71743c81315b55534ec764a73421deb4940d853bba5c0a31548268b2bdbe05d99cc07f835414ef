{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{789:function(e,t,a){\"use strict\";a.r(t);var s=a(12),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"schedule\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#schedule\"}},[e._v(\"#\")]),e._v(\" Schedule\")]),e._v(\" \"),a(\"p\",[e._v(\"解决\"),a(\"code\",[e._v(\"目标对象更快完成渲染\")]),e._v(\"与\"),a(\"code\",[e._v(\"及时响应优先级更高任务\")]),e._v(\"之间的矛盾。\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"perceived-performance\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#perceived-performance\"}},[e._v(\"#\")]),e._v(\" Perceived Performance\")]),e._v(\" \"),a(\"p\",[e._v(\"Perceived performance 可感知到的性能\")]),e._v(\" \"),a(\"p\",[e._v(\"在流畅性的章节中提到将主线程的一个长任务进行\"),a(\"code\",[e._v(\"时间分片\")]),e._v(\"可以拆分为多个帧任务, 但如果同时存在多个任务则必然会存在一种竞争机制, 于是需要一种 \"),a(\"code\",[e._v(\"Schedule\")]),e._v(\" 机制, 在时间分片中加入\"),a(\"code\",[e._v(\"动态优先级\")]),e._v(\"的概念来真正避免卡顿现象。\")]),e._v(\" \"),a(\"h3\",{attrs:{id:\"schedule-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#schedule-2\"}},[e._v(\"#\")]),e._v(\" Schedule\")]),e._v(\" \"),a(\"p\",[e._v(\"调度算法思想:\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"任务执行时间得足够短, 能在一帧时间内执行完(时间分片);\")]),e._v(\" \"),a(\"li\",[e._v(\"不同任务存在不同的优先级;\")])]),e._v(\" \"),a(\"h3\",{attrs:{id:\"任务的种类\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#任务的种类\"}},[e._v(\"#\")]),e._v(\" 任务的种类\")]),e._v(\" \"),a(\"p\",[e._v(\"在一帧中执行的任务种类有以下几种类别:\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[e._v(\"user-blocking tasks\")]),e._v(\": 基于用户的交互的任务(可见), 需在当前帧处理; -> \"),a(\"code\",[e._v(\"input\")]),e._v(\"、\"),a(\"code\",[e._v(\"rAF\")]),e._v(\"、\"),a(\"code\",[e._v(\"microtask\")]),e._v(\"(顺畅的交互应小于 10 ms, 下同)\")]),e._v(\" \"),a(\"li\",[a(\"code\",[e._v(\"default tasks\")]),e._v(\": 基于用户获取数据渲染到界面上的任务(可见), 在当前的帧以及下一帧里处理; -> \"),a(\"code\",[e._v(\"macrotask\")]),e._v(\"(小于 100 ms)\")]),e._v(\" \"),a(\"li\",[a(\"code\",[e._v(\"idle tasks\")]),e._v(\": 和分析、缓存、排序相关的任务(不可见); -> \"),a(\"code\",[e._v(\"requestIdleCallback\")]),e._v(\"(小于 10 ms)\")])]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[e._v(\"不能拆分的任务(执行时间较长的 chunk)怎么办？\")])]),e._v(\" \"),a(\"p\",[e._v(\"借助 \"),a(\"code\",[e._v(\"web Worker\")])]),e._v(\" \"),a(\"h3\",{attrs:{id:\"任务的排序机制\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#任务的排序机制\"}},[e._v(\"#\")]),e._v(\" 任务的排序机制\")]),e._v(\" \"),a(\"p\",[e._v(\"任务的排序机制是由 \"),a(\"code\",[e._v(\"expiration time\")]),e._v(\" 这个字段决定的，其值为 \"),a(\"code\",[e._v(\"callback 的注册时间\")]),e._v(\"与\"),a(\"code\",[e._v(\"当前任务优先级的值\")]),e._v(\"之和, 表示过期时间(值越小, 越早执行)。\")]),e._v(\" \"),a(\"p\",[e._v(\"优先级的值分为以下几种类别:\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[e._v(\"Immediate\")]),e._v(\": (0ms timeout)需要实时交互的任务;              (Do it now)\")]),e._v(\" \"),a(\"li\",[a(\"code\",[e._v(\"User Block\")]),e._v(\": (250ms timeout)对页面交互有副作用的任务;      (Do it now)\")]),e._v(\" \"),a(\"li\",[a(\"code\",[e._v(\"Normal\")]),e._v(\": (5s timeout)不影响交互的任务;                    (Do it soon)\")]),e._v(\" \"),a(\"li\",[a(\"code\",[e._v(\"Low\")]),e._v(\": (10s timeout)可以延迟执行，但最终需要执行的任务;      (Do it eventually)\")]),e._v(\" \"),a(\"li\",[a(\"code\",[e._v(\"Idle\")]),e._v(\": (no timeout)执行与否不影响应用的任务;               (Do it if you can)\")])]),e._v(\" \"),a(\"p\",[e._v(\"在了解了 \"),a(\"code\",[e._v(\"expiration time\")]),e._v(\" 之后, 对 \"),a(\"code\",[e._v(\"Schedule\")]),e._v(\" 的流程进行如下概述:\")]),e._v(\" \"),a(\"ol\",[a(\"li\",[e._v(\"所有回调根据 \"),a(\"code\",[e._v(\"expiration time\")]),e._v(\" 排好序放入一个队列中;\")]),e._v(\" \"),a(\"li\",[a(\"code\",[e._v(\"Schedule\")]),e._v(\" 自己注册一个回调 callback 调用该队列，并下一个帧中执行它;\")]),e._v(\" \"),a(\"li\",[e._v(\"在下一帧中尽可能多地执行队形里的回调;\")])]),e._v(\" \"),a(\"h3\",{attrs:{id:\"schedule-源码分析\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#schedule-源码分析\"}},[e._v(\"#\")]),e._v(\" Schedule 源码分析\")]),e._v(\" \"),a(\"p\",[e._v(\"Schedule 中 4 个比较重要的方法的作用罗列如下:\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"requestHostCallback: 提供调用下一帧的能力\")]),e._v(\" \"),a(\"li\",[e._v(\"cancelHostCallback: 提供取消当前任务的能力\")]),e._v(\" \"),a(\"li\",[e._v(\"shouldYieldToHost: 提供暂停当前任务的能力\")]),e._v(\" \"),a(\"li\",[e._v(\"getCurrentTime: 根据该函数获取的值从而判断具体的优先级\")])]),e._v(\" \"),a(\"h3\",{attrs:{id:\"jnd\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#jnd\"}},[e._v(\"#\")]),e._v(\" JND\")]),e._v(\" \"),a(\"p\",[e._v(\"JND(Just Noticeable Difference), \"),a(\"a\",{attrs:{href:\"https://github.com/MuYunyun/react/blob/0f1e97e7cb67b7e403af5f78f38294dfd33e081e/packages/react-reconciler/src/ReactFiberWorkLoop.js#L2144-L2167\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"JND\"),a(\"OutboundLink\")],1)]),e._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"// Computes the next Just Noticeable Difference (JND) boundary.\")]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"// The theory is that a person can't tell the difference between small differences in time.\")]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\")]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"// difference in the experience. However, waiting for longer might mean that we can avoid\")]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"// showing an intermediate loading state. The longer we have already waited, the harder it\")]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"// is to tell small differences in time. Therefore, the longer we've already waited,\")]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"// the longer we can wait additionally. At some point we have to give up though.\")]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"// We pick a train model where the next boundary commits at a consistent schedule.\")]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[e._v(\"// These particular numbers are vague estimates. We expect to adjust them based on research.\")]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[e._v(\"function\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"jnd\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[e._v(\"timeElapsed\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\":\")]),e._v(\" number\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\")\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"{\")]),e._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[e._v(\"return\")]),e._v(\" timeElapsed \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"120\")]),e._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"?\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"120\")]),e._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\":\")]),e._v(\" timeElapsed \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"480\")]),e._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"?\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"480\")]),e._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\":\")]),e._v(\" timeElapsed \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1080\")]),e._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"?\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1080\")]),e._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\":\")]),e._v(\" timeElapsed \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1920\")]),e._v(\"\\n          \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"?\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1920\")]),e._v(\"\\n          \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\":\")]),e._v(\" timeElapsed \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"3000\")]),e._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"?\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"3000\")]),e._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\":\")]),e._v(\" timeElapsed \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"<\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"4320\")]),e._v(\"\\n              \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"?\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"4320\")]),e._v(\"\\n              \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\":\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[e._v(\"ceil\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"(\")]),e._v(\"timeElapsed \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"/\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1960\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\")\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[e._v(\"*\")]),e._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[e._v(\"1960\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\";\")]),e._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[e._v(\"}\")]),e._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"connection-between-time-slicing-and-suspense\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#connection-between-time-slicing-and-suspense\"}},[e._v(\"#\")]),e._v(\" Connection between Time Slicing and Suspense\")]),e._v(\" \"),a(\"p\",[a(\"code\",[e._v(\"Time Slicing\")]),e._v(\" is the premise of \"),a(\"code\",[e._v(\"Suspense\")]),e._v(\". Because in each time slicing it can compare the task priority, and then determine whether to show the loading.\")]),e._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"http://with.muyunyun.cn/6999fa9b5759613e1dde3b2dfec7076d.jpg\",alt:\"\"}})]),e._v(\" \"),a(\"h3\",{attrs:{id:\"is-input-pending\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#is-input-pending\"}},[e._v(\"#\")]),e._v(\" is-input-pending\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[e._v(\"相比 \"),a(\"code\",[e._v(\"requestIdleCallback\")]),e._v(\", 其有更简洁的 api;\")]),e._v(\" \"),a(\"li\",[e._v(\"另外其不会受到优先级的限制;\")])]),e._v(\" \"),a(\"blockquote\",[a(\"p\",[a(\"a\",{attrs:{href:\"https://github.com/WICG/is-input-pending\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"is-input-pending\"),a(\"OutboundLink\")],1)])]),e._v(\" \"),a(\"h3\",{attrs:{id:\"相关文章\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#相关文章\"}},[e._v(\"#\")]),e._v(\" 相关文章\")]),e._v(\" \"),a(\"ul\",[a(\"li\",[a(\"a\",{attrs:{href:\"https://developer.chrome.com/devsummit/schedule/scheduling-on-off-main-thread\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"scheduling-on-off-main-thread\"),a(\"OutboundLink\")],1),e._v(\": 讲解了如何在帧里拆分任务以及使用 worker 的一些限制\")]),e._v(\" \"),a(\"li\",[a(\"a\",{attrs:{href:\"https://philippspiess.com/scheduling-in-react/#fn-1\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Scheduling in React\"),a(\"OutboundLink\")],1),e._v(\": 任务的排序机制\")]),e._v(\" \"),a(\"li\",[a(\"a\",{attrs:{href:\"https://github.com/WICG/main-thread-scheduling\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"main-thread-scheduling\"),a(\"OutboundLink\")],1),e._v(\": schedule API in future. 核心是从最高优先级的任务中挑选时间过去最久的任务。\")]),e._v(\" \"),a(\"li\",[a(\"a\",{attrs:{href:\"https://www.youtube.com/watch?reload=9&v=Iyrf52cwxQI&feature=youtu.be&utm_source=tinyreact&utm_medium=email\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Scheduling is the Future\"),a(\"OutboundLink\")],1),e._v(\": @ReactEurope 2019 speaker: @aweary\")])])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}