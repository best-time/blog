{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{567:function(e,a,t){\"use strict\";t.r(a);var v=t(12),r=Object(v.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[t(\"h3\",{attrs:{id:\"前端实时协议\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#前端实时协议\"}},[e._v(\"#\")]),e._v(\" 前端实时协议\")]),e._v(\" \"),t(\"ul\",[t(\"li\",[t(\"code\",[e._v(\"websocket\")])]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"poll\")]),e._v(\"(轮询)\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"long-poll\")]),e._v(\"(长轮询): 场景: 移动端扫 pc 端二维码, 从而 pc 端完成登入\")])]),e._v(\" \"),t(\"p\",[t(\"code\",[e._v(\"long-poll\")]),e._v(\" 的含义就是设定一定的超时时间进行挂起, 在这个时间范围内如果收到服务端的返回信息则发给客户端响应报文, 若超过这时间没有服务端的返回信息则再次发起 \"),t(\"code\",[e._v(\"long-poll\")])]),e._v(\" \"),t(\"h3\",{attrs:{id:\"hybride-的通信\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#hybride-的通信\"}},[e._v(\"#\")]),e._v(\" hybride 的通信\")]),e._v(\" \"),t(\"h4\",{attrs:{id:\"在-web-中调用-native\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#在-web-中调用-native\"}},[e._v(\"#\")]),e._v(\" 在 web 中调用 native\")]),e._v(\" \"),t(\"ol\",[t(\"li\",[t(\"code\",[e._v(\"Native\")]),e._v(\" 先注册 \"),t(\"code\",[e._v(\"Schema\")]),e._v(\" 协议的 URL。在 app 的 JS 代码中请求该 URL 就能调用相应 Schema 中的原生方法\")]),e._v(\" \"),t(\"li\",[t(\"code\",[e._v(\"addJavaScriptInterface\")]),e._v(\": 这个是针对 android 的, 使用这个 api 添加的方法就能在 app 的 JS 代码里进行调用;\")])]),e._v(\" \"),t(\"h4\",{attrs:{id:\"在-native-中调用-js\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#在-native-中调用-js\"}},[e._v(\"#\")]),e._v(\" 在 native 中调用 JS\")]),e._v(\" \"),t(\"ol\",[t(\"li\",[t(\"code\",[e._v(\"loadUrl\")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);","extractedComments":[]}