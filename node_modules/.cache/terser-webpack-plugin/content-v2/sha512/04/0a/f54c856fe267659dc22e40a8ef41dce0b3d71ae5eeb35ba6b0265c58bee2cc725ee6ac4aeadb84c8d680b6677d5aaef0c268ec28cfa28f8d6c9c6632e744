{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{743:function(s,e,t){\"use strict\";t.r(e);var c=t(12),a=Object(c.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h3\",{attrs:{id:\"checkbox-组件\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#checkbox-组件\"}},[s._v(\"#\")]),s._v(\" CheckBox 组件\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"勾的定制化: 首先使用 \"),t(\"code\",[s._v(\"appearance: none\")]),s._v(\" 去掉原生自带的勾。接着创建一个矩形, 保留 \"),t(\"code\",[s._v(\"border-left\")]),s._v(\" 与 \"),t(\"code\",[s._v(\"border-bottom\")]),s._v(\" 的边, 进行旋转得到勾。\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"能用-css-解决的场景尽量用-css-解决\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#能用-css-解决的场景尽量用-css-解决\"}},[s._v(\"#\")]),s._v(\" 能用 css 解决的场景尽量用 css 解决\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"http://with.muyunyun.cn/6a44d5cba2693eea4e162f8514aa72ba.jpg\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[s._v(\"场景: 蓝色区域为可以更改 \"),t(\"code\",[s._v(\"checked\")]),s._v(\" 的地方, 最开始使用 JS 计算出区域 1 与区域 2 的宽度, 使之相加得到蓝色区域的宽度。其实使用 css 中的 \"),t(\"code\",[s._v(\"display: inline-block\")]),s._v(\" 可以自动获取子节点的宽度。\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"css-的常量属性-比如-color、size-不要设置默认属性值-defaultprops\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css-的常量属性-比如-color、size-不要设置默认属性值-defaultprops\"}},[s._v(\"#\")]),s._v(\" css 的常量属性(比如 color、size)不要设置默认属性值(defaultProps)\")]),s._v(\" \"),t(\"p\",[s._v(\"使用了默认属性值则会配合 JS 动态插入到 \"),t(\"code\",[s._v(\"style\")]),s._v(\" 属性, 这样子有个缺陷: 用户传入自定义的 \"),t(\"code\",[s._v(\"class 属性\")]),s._v(\" 不会生效。(因为 style 的优先级大于 class 传入的优先级)\")])])}),[],!1,null,null,null);e.default=a.exports}}]);","extractedComments":[]}