{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{662:function(s,t,a){\"use strict\";a.r(t);var r=a(12),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"swap-nodes-in-pairs\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#swap-nodes-in-pairs\"}},[s._v(\"#\")]),s._v(\" Swap Nodes in Pairs\")]),s._v(\" \"),a(\"p\",[s._v(\"Given a linked list, swap every two adjacent nodes and return its head.\")]),s._v(\" \"),a(\"p\",[s._v(\"You may not modify the values in the list's nodes, only nodes itself may be changed.\")]),s._v(\" \"),a(\"p\",[s._v(\"Example:\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[s._v(\"Given \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" you should \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" the list \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"as\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3.\")]),s._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"analyze\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#analyze\"}},[s._v(\"#\")]),s._v(\" analyze\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[s._v(\"prev  first  second  next\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),s._v(\"\\n              \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\n              \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\n进行如下指针变换\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\"\\nprev \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" second \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" first \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" next\\n          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),s._v(\"\\n              \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\n              \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\n移动指针\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\"\\n                   prev   first  second  next\\n          \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),s._v(\"\\n              \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\n              \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\n重复上述操作\\n\")])])]),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"/**\\n * Definition for singly-linked list.\\n * function ListNode(val) {\\n *     this.val = val;\\n *     this.next = null;\\n * }\\n */\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"/**\\n * @param {ListNode} head\\n * @return {ListNode}\\n */\")]),s._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[s._v(\"swapPairs\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"head\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" dummyHead \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ListNode\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n  dummyHead\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" head\\n\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" prev \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" dummyHead\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" first \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" prev\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"next\\n\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"while\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"first \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"&&\")]),s._v(\" first\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"next\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" second \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" first\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"next\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" second\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"next\\n\\n    second\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" first\\n    first\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" next\\n    prev\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"next \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" second\\n\\n    prev \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" first\\n    first \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" first\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"next\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" dummyHead\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"next\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}