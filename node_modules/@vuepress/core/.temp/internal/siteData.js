/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "记录",
  "description": "笔记",
  "base": "/blog/",
  "headTags": [],
  "pages": [
    {
      "title": "Hello VuePress",
      "frontmatter": {},
      "regularPath": "/",
      "relativePath": "README.md",
      "key": "v-73f4a93e",
      "path": "/"
    },
    {
      "frontmatter": {},
      "regularPath": "/es6/Async.html",
      "relativePath": "es6/Async.md",
      "key": "v-daf6ee8c",
      "path": "/es6/Async.html",
      "headers": [
        {
          "level": 3,
          "title": "async/await 使用注意点",
          "slug": "async-await-使用注意点"
        },
        {
          "level": 3,
          "title": "async 函数的实现原理",
          "slug": "async-函数的实现原理"
        },
        {
          "level": 3,
          "title": "异步遍历器",
          "slug": "异步遍历器"
        }
      ]
    },
    {
      "title": "Promise/A+ 核心",
      "frontmatter": {},
      "regularPath": "/es6/Promise2.html",
      "relativePath": "es6/Promise2.md",
      "key": "v-34102dca",
      "path": "/es6/Promise2.html",
      "headers": [
        {
          "level": 3,
          "title": "Promise/A+ 核心",
          "slug": "promise-a-核心"
        },
        {
          "level": 3,
          "title": "Promise api",
          "slug": "promise-api"
        },
        {
          "level": 3,
          "title": "实现一个 Promise",
          "slug": "实现一个-promise"
        },
        {
          "level": 3,
          "title": "拓展延伸",
          "slug": "拓展延伸"
        },
        {
          "level": 3,
          "title": "问题: promise.all 如何做到让多个 setTimeout 并发运行?",
          "slug": "问题-promise-all-如何做到让多个-settimeout-并发运行"
        }
      ]
    },
    {
      "title": "Generator 使用规律",
      "frontmatter": {},
      "regularPath": "/es6/Generator.html",
      "relativePath": "es6/Generator.md",
      "key": "v-718d054c",
      "path": "/es6/Generator.html",
      "headers": [
        {
          "level": 3,
          "title": "Generator 使用规律",
          "slug": "generator-使用规律"
        },
        {
          "level": 3,
          "title": "yield 暂停的位置",
          "slug": "yield-暂停的位置"
        },
        {
          "level": 3,
          "title": "遇到 return/throw",
          "slug": "遇到-return-throw"
        },
        {
          "level": 3,
          "title": "Generator 的简单实现",
          "slug": "generator-的简单实现"
        },
        {
          "level": 3,
          "title": "Generator 函数的异步应用",
          "slug": "generator-函数的异步应用"
        }
      ]
    },
    {
      "title": "proxy",
      "frontmatter": {},
      "regularPath": "/es6/Proxy.html",
      "relativePath": "es6/Proxy.md",
      "key": "v-f8ab510c",
      "path": "/es6/Proxy.html",
      "headers": [
        {
          "level": 2,
          "title": "get (目标对象、属性名和 proxy 实例本身)",
          "slug": "get-目标对象、属性名和-proxy-实例本身"
        },
        {
          "level": 2,
          "title": "set(目标对象、属性名、属性值和 Proxy 实例本身, 其中最后一个参数可选)",
          "slug": "set-目标对象、属性名、属性值和-proxy-实例本身-其中最后一个参数可选"
        },
        {
          "level": 2,
          "title": "apply(目标对象、目标对象的上下文对象（this）和目标对象的参数数组)",
          "slug": "apply-目标对象、目标对象的上下文对象-this-和目标对象的参数数组"
        },
        {
          "level": 2,
          "title": "has (目标对象、需查询的属性名)",
          "slug": "has-目标对象、需查询的属性名"
        },
        {
          "level": 2,
          "title": "construct() 用于拦截new命令",
          "slug": "construct-用于拦截new命令"
        },
        {
          "level": 2,
          "title": "deleteProperty()",
          "slug": "deleteproperty"
        },
        {
          "level": 2,
          "title": "defineProperty()",
          "slug": "defineproperty"
        },
        {
          "level": 2,
          "title": "getOwnPropertyDescriptor()",
          "slug": "getownpropertydescriptor"
        },
        {
          "level": 2,
          "title": "getPrototypeOf()",
          "slug": "getprototypeof"
        },
        {
          "level": 2,
          "title": "isExtensible()",
          "slug": "isextensible"
        },
        {
          "level": 2,
          "title": "ownKeys()",
          "slug": "ownkeys"
        },
        {
          "level": 2,
          "title": "preventExtensions()",
          "slug": "preventextensions"
        },
        {
          "level": 2,
          "title": "setPrototypeOf()",
          "slug": "setprototypeof"
        },
        {
          "level": 2,
          "title": "Proxy.revocable()",
          "slug": "proxy-revocable"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/es6/",
      "relativePath": "es6/README.md",
      "key": "v-b37c1422",
      "path": "/es6/"
    },
    {
      "title": "Reflect",
      "frontmatter": {},
      "regularPath": "/es6/Reflect.html",
      "relativePath": "es6/Reflect.md",
      "key": "v-e09ed0cc",
      "path": "/es6/Reflect.html",
      "headers": [
        {
          "level": 2,
          "title": "Reflect",
          "slug": "reflect"
        },
        {
          "level": 2,
          "title": "Reflect.get(target, name, receiver)",
          "slug": "reflect-get-target-name-receiver"
        },
        {
          "level": 2,
          "title": "Reflect.set(target, name, value, receiver)",
          "slug": "reflect-set-target-name-value-receiver"
        },
        {
          "level": 2,
          "title": "Reflect.deleteProperty(obj, name)",
          "slug": "reflect-deleteproperty-obj-name"
        },
        {
          "level": 2,
          "title": "Reflect.construct(target, args)",
          "slug": "reflect-construct-target-args"
        },
        {
          "level": 2,
          "title": "Reflect.getPrototypeOf(obj)",
          "slug": "reflect-getprototypeof-obj"
        },
        {
          "level": 2,
          "title": "Reflect.setPrototypeOf(obj, newProto)",
          "slug": "reflect-setprototypeof-obj-newproto"
        },
        {
          "level": 2,
          "title": "Reflect.apply(func, thisArg, args)",
          "slug": "reflect-apply-func-thisarg-args"
        },
        {
          "level": 2,
          "title": "Reflect.defineProperty(target, propertyKey, attributes)",
          "slug": "reflect-defineproperty-target-propertykey-attributes"
        },
        {
          "level": 2,
          "title": "Reflect.getOwnPropertyDescriptor(target, propertyKey)",
          "slug": "reflect-getownpropertydescriptor-target-propertykey"
        },
        {
          "level": 2,
          "title": "Reflect.isExtensible (target)",
          "slug": "reflect-isextensible-target"
        },
        {
          "level": 2,
          "title": "Reflect.preventExtensions(target)",
          "slug": "reflect-preventextensions-target"
        },
        {
          "level": 2,
          "title": "Reflect.ownKeys (target)",
          "slug": "reflect-ownkeys-target"
        }
      ]
    },
    {
      "title": "Reflect",
      "frontmatter": {},
      "regularPath": "/es6/Reflect2.html",
      "relativePath": "es6/Reflect2.md",
      "key": "v-6173620e",
      "path": "/es6/Reflect2.html",
      "headers": [
        {
          "level": 3,
          "title": "Reflect",
          "slug": "reflect"
        }
      ]
    },
    {
      "title": "箭头函数中的 this",
      "frontmatter": {},
      "regularPath": "/es6/arrow.html",
      "relativePath": "es6/arrow.md",
      "key": "v-67bd5b9a",
      "path": "/es6/arrow.html",
      "headers": [
        {
          "level": 3,
          "title": "箭头函数中的 this",
          "slug": "箭头函数中的-this"
        },
        {
          "level": 3,
          "title": "箭头函数小 tip",
          "slug": "箭头函数小-tip"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/es6/decorate.html",
      "relativePath": "es6/decorate.md",
      "key": "v-1fe2545e",
      "path": "/es6/decorate.html",
      "headers": [
        {
          "level": 3,
          "title": "装饰器简介",
          "slug": "装饰器简介"
        },
        {
          "level": 3,
          "title": "作用于类的装饰器",
          "slug": "作用于类的装饰器"
        },
        {
          "level": 3,
          "title": "作用于类方法的装饰器",
          "slug": "作用于类方法的装饰器"
        },
        {
          "level": 3,
          "title": "相关链接",
          "slug": "相关链接"
        }
      ]
    },
    {
      "title": "for 循环/while 循环",
      "frontmatter": {},
      "regularPath": "/es6/cycle.html",
      "relativePath": "es6/cycle.md",
      "key": "v-3a6f7f0c",
      "path": "/es6/cycle.html",
      "headers": [
        {
          "level": 3,
          "title": "for 循环/while 循环",
          "slug": "for-循环-while-循环"
        },
        {
          "level": 3,
          "title": "forEach",
          "slug": "foreach"
        },
        {
          "level": 3,
          "title": "for...in",
          "slug": "for-in"
        },
        {
          "level": 3,
          "title": "for...of",
          "slug": "for-of"
        }
      ]
    },
    {
      "title": "ES5 之继承",
      "frontmatter": {},
      "regularPath": "/es6/extend.html",
      "relativePath": "es6/extend.md",
      "key": "v-6c5c8fc4",
      "path": "/es6/extend.html",
      "headers": [
        {
          "level": 3,
          "title": "ES5 之继承",
          "slug": "es5-之继承"
        },
        {
          "level": 3,
          "title": "揭秘 ES6 继承之 super",
          "slug": "揭秘-es6-继承之-super"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/es6/destruct.html",
      "relativePath": "es6/destruct.md",
      "key": "v-2a7c908c",
      "path": "/es6/destruct.html",
      "headers": [
        {
          "level": 3,
          "title": "对象中的扩展运算符",
          "slug": "对象中的扩展运算符"
        },
        {
          "level": 3,
          "title": "数组中的扩展运算符",
          "slug": "数组中的扩展运算符"
        },
        {
          "level": 3,
          "title": "相关链接",
          "slug": "相关链接"
        }
      ]
    },
    {
      "title": "CommonJS 模块与 ES6 模块间的差异",
      "frontmatter": {},
      "regularPath": "/es6/module.html",
      "relativePath": "es6/module.md",
      "key": "v-27c7cf20",
      "path": "/es6/module.html",
      "headers": [
        {
          "level": 3,
          "title": "CommonJS 模块与 ES6 模块间的差异",
          "slug": "commonjs-模块与-es6-模块间的差异"
        },
        {
          "level": 3,
          "title": "同时支持 CJS 与 ESM 包的最佳实践",
          "slug": "同时支持-cjs-与-esm-包的最佳实践"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/es6/promise.html",
      "relativePath": "es6/promise.md",
      "key": "v-4ab14b5a",
      "path": "/es6/promise.html",
      "headers": [
        {
          "level": 2,
          "title": "异步加载图片",
          "slug": "异步加载图片"
        },
        {
          "level": 2,
          "title": "promise 实现ajax",
          "slug": "promise-实现ajax"
        }
      ]
    },
    {
      "title": "set  map",
      "frontmatter": {},
      "regularPath": "/es6/setmap.html",
      "relativePath": "es6/setmap.md",
      "key": "v-05c38284",
      "path": "/es6/setmap.html"
    },
    {
      "title": "typescript",
      "frontmatter": {},
      "regularPath": "/es6/typescript.html",
      "relativePath": "es6/typescript.md",
      "key": "v-17d59624",
      "path": "/es6/typescript.html",
      "headers": [
        {
          "level": 2,
          "title": "下面列举了四种常见的无法正常工作的场景以及对应的解决方法：",
          "slug": "下面列举了四种常见的无法正常工作的场景以及对应的解决方法"
        },
        {
          "level": 2,
          "title": "库本身没有自带类型定义",
          "slug": "库本身没有自带类型定义"
        },
        {
          "level": 2,
          "title": "库本身没有类型定义, 也没有相关的@type",
          "slug": "库本身没有类型定义-也没有相关的-type"
        },
        {
          "level": 2,
          "title": "类型声明库有误",
          "slug": "类型声明库有误"
        },
        {
          "level": 2,
          "title": "类型声明报错",
          "slug": "类型声明报错"
        },
        {
          "level": 2,
          "title": "类型断言",
          "slug": "类型断言"
        },
        {
          "level": 2,
          "title": "类型守卫",
          "slug": "类型守卫"
        },
        {
          "level": 2,
          "title": "双重断言",
          "slug": "双重断言"
        },
        {
          "level": 2,
          "title": "1. 可选链 Optional Chining",
          "slug": "_1-可选链-optional-chining"
        },
        {
          "level": 2,
          "title": "2. 空值联合 Nullish Coalescing",
          "slug": "_2-空值联合-nullish-coalescing"
        }
      ]
    },
    {
      "title": "Vue",
      "frontmatter": {},
      "regularPath": "/frame/vue.html",
      "relativePath": "frame/vue.md",
      "key": "v-08b1945a",
      "path": "/frame/vue.html",
      "headers": [
        {
          "level": 2,
          "title": "生命周期",
          "slug": "生命周期"
        },
        {
          "level": 2,
          "title": "父子组件生命周期",
          "slug": "父子组件生命周期"
        }
      ]
    },
    {
      "title": "Generics",
      "frontmatter": {},
      "regularPath": "/handbook/Generics.html",
      "relativePath": "handbook/Generics.md",
      "key": "v-401224fa",
      "path": "/handbook/Generics.html",
      "headers": [
        {
          "level": 2,
          "title": "Generics",
          "slug": "generics"
        }
      ]
    },
    {
      "title": "11111",
      "frontmatter": {},
      "regularPath": "/handbook/ConditionalTypes.html",
      "relativePath": "handbook/ConditionalTypes.md",
      "key": "v-e9994acc",
      "path": "/handbook/ConditionalTypes.html",
      "headers": [
        {
          "level": 2,
          "title": "11111",
          "slug": "_11111"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/js/",
      "relativePath": "js/README.md",
      "key": "v-da5ce61e",
      "path": "/js/"
    },
    {
      "title": "常用js api",
      "frontmatter": {},
      "regularPath": "/js/api.html",
      "relativePath": "js/api.md",
      "key": "v-77872f9e",
      "path": "/js/api.html",
      "headers": [
        {
          "level": 2,
          "title": "常用js api",
          "slug": "常用js-api"
        }
      ]
    },
    {
      "title": "位运算",
      "frontmatter": {},
      "regularPath": "/js/bit.html",
      "relativePath": "js/bit.md",
      "key": "v-7dd93590",
      "path": "/js/bit.html",
      "headers": [
        {
          "level": 2,
          "title": "0.1 + 0.2 为啥不等于 0.3",
          "slug": "_0-1-0-2-为啥不等于-0-3"
        }
      ]
    },
    {
      "title": "classList",
      "frontmatter": {},
      "regularPath": "/js/classList.html",
      "relativePath": "js/classList.md",
      "key": "v-908d1534",
      "path": "/js/classList.html",
      "headers": [
        {
          "level": 2,
          "title": "Element.classList",
          "slug": "element-classlist"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/js/canvas.html",
      "relativePath": "js/canvas.md",
      "key": "v-2511561a",
      "path": "/js/canvas.html"
    },
    {
      "title": "设计模式",
      "frontmatter": {},
      "regularPath": "/js/designPatterns.html",
      "relativePath": "js/designPatterns.md",
      "key": "v-1570787a",
      "path": "/js/designPatterns.html",
      "headers": [
        {
          "level": 2,
          "title": "单例模式",
          "slug": "单例模式"
        },
        {
          "level": 2,
          "title": "构造器模式",
          "slug": "构造器模式"
        },
        {
          "level": 2,
          "title": "建造者模式",
          "slug": "建造者模式"
        },
        {
          "level": 2,
          "title": "代理模式",
          "slug": "代理模式"
        },
        {
          "level": 2,
          "title": "外观模式",
          "slug": "外观模式"
        },
        {
          "level": 2,
          "title": "观察者模式",
          "slug": "观察者模式"
        },
        {
          "level": 2,
          "title": "策略模式",
          "slug": "策略模式"
        },
        {
          "level": 2,
          "title": "迭代器模式",
          "slug": "迭代器模式"
        },
        {
          "level": 2,
          "title": "装饰器模式",
          "slug": "装饰器模式"
        }
      ]
    },
    {
      "title": "元素位置",
      "frontmatter": {},
      "regularPath": "/js/domPosition.html",
      "relativePath": "js/domPosition.md",
      "key": "v-93431388",
      "path": "/js/domPosition.html",
      "headers": [
        {
          "level": 2,
          "title": "screen",
          "slug": "screen"
        },
        {
          "level": 2,
          "title": "offsetTop/offsetLeft",
          "slug": "offsettop-offsetleft"
        },
        {
          "level": 2,
          "title": "getBoundingClientRect()",
          "slug": "getboundingclientrect"
        },
        {
          "level": 2,
          "title": "getClientRects()",
          "slug": "getclientrects"
        }
      ]
    },
    {
      "title": "函数式",
      "frontmatter": {},
      "regularPath": "/js/function.html",
      "relativePath": "js/function.md",
      "key": "v-dd86aecc",
      "path": "/js/function.html",
      "headers": [
        {
          "level": 2,
          "title": "柯里化",
          "slug": "柯里化"
        },
        {
          "level": 2,
          "title": "偏函数",
          "slug": "偏函数"
        },
        {
          "level": 2,
          "title": "缓存",
          "slug": "缓存"
        }
      ]
    },
    {
      "title": "JavaScript垃圾回收机制",
      "frontmatter": {},
      "regularPath": "/js/js1.html",
      "relativePath": "js/js1.md",
      "key": "v-3e69d27c",
      "path": "/js/js1.html",
      "headers": [
        {
          "level": 2,
          "title": "JavaScript垃圾回收机制",
          "slug": "javascript垃圾回收机制"
        },
        {
          "level": 2,
          "title": "script标签中 defer和 async属性的区别",
          "slug": "script标签中-defer和-async属性的区别"
        },
        {
          "level": 2,
          "title": "在DOM操作中怎样创建、添加、移除、替换、插入和查找节点",
          "slug": "在dom操作中怎样创建、添加、移除、替换、插入和查找节点"
        },
        {
          "level": 2,
          "title": "new操作符的作用",
          "slug": "new操作符的作用"
        },
        {
          "level": 2,
          "title": "对象属性类型",
          "slug": "对象属性类型"
        },
        {
          "level": 2,
          "title": "跨域",
          "slug": "跨域"
        },
        {
          "level": 2,
          "title": "ajax",
          "slug": "ajax"
        },
        {
          "level": 2,
          "title": "Iterator Generator",
          "slug": "iterator-generator"
        },
        {
          "level": 2,
          "title": "instanceof",
          "slug": "instanceof"
        },
        {
          "level": 2,
          "title": "null 为什么判断成object",
          "slug": "null-为什么判断成object"
        },
        {
          "level": 2,
          "title": "this call apply 理解",
          "slug": "this-call-apply-理解"
        },
        {
          "level": 2,
          "title": "原型，原型链？ 有什么特点",
          "slug": "原型-原型链-有什么特点"
        },
        {
          "level": 2,
          "title": "JSON.parse(JSON.stringify(obj))实现深拷贝的弊端",
          "slug": "json-parse-json-stringify-obj-实现深拷贝的弊端"
        },
        {
          "level": 2,
          "title": "页面通信",
          "slug": "页面通信"
        }
      ]
    },
    {
      "title": "按位与(&)",
      "frontmatter": {},
      "regularPath": "/js/operation.html",
      "relativePath": "js/operation.md",
      "key": "v-1f645e44",
      "path": "/js/operation.html",
      "headers": [
        {
          "level": 2,
          "title": "按位与(&)",
          "slug": "按位与"
        },
        {
          "level": 2,
          "title": "按位或(|)",
          "slug": "按位或"
        },
        {
          "level": 2,
          "title": "按位非(~)",
          "slug": "按位非"
        },
        {
          "level": 2,
          "title": "按位异或(^)",
          "slug": "按位异或"
        },
        {
          "level": 2,
          "title": "有符号左移(<<)",
          "slug": "有符号左移"
        },
        {
          "level": 2,
          "title": "无符号右移(>>>)",
          "slug": "无符号右移"
        },
        {
          "level": 3,
          "title": "(一) 代替数学运算",
          "slug": "一-代替数学运算"
        },
        {
          "level": 3,
          "title": "(二) 位掩码",
          "slug": "二-位掩码"
        }
      ]
    },
    {
      "title": "正则",
      "frontmatter": {},
      "regularPath": "/js/reg.html",
      "relativePath": "js/reg.md",
      "key": "v-3126a8ac",
      "path": "/js/reg.html",
      "headers": [
        {
          "level": 2,
          "title": "\\b",
          "slug": "b"
        },
        {
          "level": 2,
          "title": "\\B",
          "slug": "b-2"
        },
        {
          "level": 2,
          "title": "(?=p)",
          "slug": "p"
        },
        {
          "level": 2,
          "title": "(?!p)",
          "slug": "p-2"
        },
        {
          "level": 2,
          "title": "(?<=p)",
          "slug": "p-3"
        },
        {
          "level": 2,
          "title": "(?<!p)",
          "slug": "p-4"
        },
        {
          "level": 2,
          "title": "字面量方式、实例创建的方式",
          "slug": "字面量方式、实例创建的方式"
        },
        {
          "level": 2,
          "title": "gim",
          "slug": "gim"
        },
        {
          "level": 2,
          "title": "reg",
          "slug": "reg"
        },
        {
          "level": 3,
          "title": "[ ]",
          "slug": ""
        },
        {
          "level": 2,
          "title": "|",
          "slug": "-2"
        },
        {
          "level": 2,
          "title": "分组",
          "slug": "分组"
        },
        {
          "level": 2,
          "title": "正则表达式的拆分",
          "slug": "正则表达式的拆分"
        },
        {
          "level": 2,
          "title": "demo",
          "slug": "demo"
        }
      ]
    },
    {
      "title": "dom 操作",
      "frontmatter": {},
      "regularPath": "/js/dom.html",
      "relativePath": "js/dom.md",
      "key": "v-046b1d4e",
      "path": "/js/dom.html",
      "headers": [
        {
          "level": 2,
          "title": "dom创建",
          "slug": "dom创建"
        },
        {
          "level": 2,
          "title": "dom查询",
          "slug": "dom查询"
        },
        {
          "level": 2,
          "title": "dom更改",
          "slug": "dom更改"
        },
        {
          "level": 2,
          "title": "属性操作",
          "slug": "属性操作"
        },
        {
          "level": 2,
          "title": "outer和inner区别",
          "slug": "outer和inner区别"
        }
      ]
    },
    {
      "title": "字符串借用数组方法",
      "frontmatter": {},
      "regularPath": "/js/ebook.html",
      "relativePath": "js/ebook.md",
      "key": "v-62f64b94",
      "path": "/js/ebook.html",
      "headers": [
        {
          "level": 2,
          "title": "字符串借用数组方法",
          "slug": "字符串借用数组方法"
        },
        {
          "level": 2,
          "title": "数字表示方式",
          "slug": "数字表示方式"
        },
        {
          "level": 2,
          "title": "void",
          "slug": "void"
        },
        {
          "level": 2,
          "title": "Date",
          "slug": "date"
        },
        {
          "level": 2,
          "title": "~",
          "slug": ""
        },
        {
          "level": 2,
          "title": "~~",
          "slug": "-2"
        },
        {
          "level": 2,
          "title": "json.stringify",
          "slug": "json-stringify"
        },
        {
          "level": 2,
          "title": "字符串",
          "slug": "字符串"
        },
        {
          "level": 2,
          "title": "==  和 ===",
          "slug": "和"
        },
        {
          "level": 2,
          "title": "try .. finally",
          "slug": "try-finally"
        },
        {
          "level": 2,
          "title": "迭代器",
          "slug": "迭代器"
        }
      ]
    },
    {
      "title": "换肤方案",
      "frontmatter": {},
      "regularPath": "/other/switchSkin.html",
      "relativePath": "other/switchSkin.md",
      "key": "v-7ef966e6",
      "path": "/other/switchSkin.html",
      "headers": [
        {
          "level": 2,
          "title": "要实现的需求",
          "slug": "要实现的需求"
        },
        {
          "level": 2,
          "title": "利用class命名空间",
          "slug": "利用class命名空间"
        },
        {
          "level": 2,
          "title": "预备多套CSS主题（推荐",
          "slug": "预备多套css主题-推荐"
        },
        {
          "level": 2,
          "title": "动态换肤",
          "slug": "动态换肤"
        },
        {
          "level": 2,
          "title": "less在线编译实现",
          "slug": "less在线编译实现"
        },
        {
          "level": 2,
          "title": "CSS变量换肤（推荐）",
          "slug": "css变量换肤-推荐"
        }
      ]
    },
    {
      "frontmatter": {
        "layout": "Tags",
        "title": "Tags"
      },
      "regularPath": "/tag/",
      "key": "v-b1564aac",
      "path": "/tag/"
    },
    {
      "frontmatter": {
        "layout": "FrontmatterKey",
        "title": "Categories"
      },
      "regularPath": "/categories/",
      "key": "v-ef9325c4",
      "path": "/categories/"
    },
    {
      "frontmatter": {
        "layout": "TimeLines",
        "title": "Timeline"
      },
      "regularPath": "/timeline/",
      "key": "v-6319eb4e",
      "path": "/timeline/"
    }
  ],
  "themeConfig": {
    "subSidebar": "auto",
    "nav": [
      {
        "text": "首页",
        "link": "/"
      },
      {
        "text": "javascript",
        "items": [
          {
            "text": "js",
            "link": "/js/classList"
          }
        ]
      }
    ],
    "sidebar": [
      {
        "title": "javascript",
        "path": "/js/js1",
        "children": [
          {
            "title": "基础",
            "path": "/js/js1"
          },
          {
            "title": "element",
            "path": "/js/classList"
          },
          {
            "title": "dom",
            "path": "/js/dom"
          },
          {
            "title": "bit",
            "path": "/js/bit"
          },
          {
            "title": "元素位置",
            "path": "/js/domPosition"
          },
          {
            "title": "正则",
            "path": "/js/reg"
          },
          {
            "title": "函数式",
            "path": "/js/function"
          },
          {
            "title": "操作符",
            "path": "/js/operation"
          },
          {
            "title": "设计模式",
            "path": "/js/designPatterns"
          }
        ]
      },
      {
        "title": "es6",
        "path": "/es6/promise",
        "children": [
          {
            "title": "promise",
            "path": "/es6/promise"
          },
          {
            "title": "reflect",
            "path": "/es6/Reflect"
          }
        ]
      },
      {
        "title": "frame",
        "path": "/frame/vue",
        "children": [
          {
            "title": "vue",
            "path": "/frame/vue"
          }
        ]
      }
    ]
  },
  "locales": {
    "/": {
      "lang": "zh-CN",
      "path": "/"
    }
  }
}