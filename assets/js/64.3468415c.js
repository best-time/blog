(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{604:function(t,n,e){"use strict";e.r(n);var o=e(12),s=Object(o.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"vuex"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[this._v("#")]),this._v(" vuex")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("State\n\t mapState({\n\t    // 箭头函数可使代码更简练\n\t    count: state => state.count,\n\t\n\t    // 传字符串参数 'count' 等同于 `state => state.count`\n\t    countAlias: 'count',\n\t\n\t    // 为了能够使用 `this` 获取局部状态，必须使用常规函数\n\t    countPlusLocalState (state) {\n\t      return state.count + this.localCount\n\t    }\n\t  })\nGetters\n\t getters: {\n\t    doneTodos: (state, getters) => { // 接受其他 getter 作为第二个参数\n\t      return state.todos.filter(todo => todo.done)\n\t    },\n\t\tgetTodoById: (state) => (id) => { // 通过方法访问 每次都会去调用, 不缓存结果\n\t\t    return state.todos.find(todo => todo.id === id)\n\t\t  }\n\t  }\n\t  组件中使用:\n\t\tcomputed: {\n\t\t  doneTodosCount () {\n\t\t    return this.$store.getters.doneTodosCount\n\t\t  },\n\t\t // 使用对象展开运算符将 getter 混入 computed 对象中\n\t\t...mapGetters([\n\t\t  'doneTodosCount',\n\t\t  'anotherGetter',\n\t\t  // ...\n\t\t])\n\t  }\n\t  取别名同 mapState\n\t\t\nMutations\n\tmutations: {\n\t    increment (state) {\n\t      // 变更状态\n\t      state.count++\n\t    }\n\t  }\n\tstore.commit('increment')\n\t1.  当需要在对象上添加新属性时，你应该\n\t使用 `Vue.set(obj, 'newProp', 123)`, 或者\n    以新对象替换老对象。例如，利用[对象展开运算符 (opens new window)]\n    state.obj = { ...state.obj, newProp: 123 }\n\n\tmethods: {\n\t    ...mapMutations([\n\t      'increment', // 将 `this.increment()` 映射为 `this.$store.commit('increment')`\n\t\n\t      // `mapMutations` 也支持载荷：\n\t      'incrementBy' // 将 `this.incrementBy(amount)` 映射为 `this.$store.commit('incrementBy', amount)`\n\t    ]),\n\t    ...mapMutations({\n\t      add: 'increment' // 将 `this.add()` 映射为 `this.$store.commit('increment')`\n\t    })\n\t  }\nActions\nModules\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);