(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{566:function(t,n,a){"use strict";a.r(n);var i=a(12),e=Object(i.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-常用命令总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-常用命令总结"}},[t._v("#")]),t._v(" git 常用命令总结")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://gitbook.liuhui998.com/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("git book中文文档"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/b77fd16894b6",target:"_blank",rel:"noopener noreferrer"}},[t._v("gerrit日常使用"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"基本命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本命令"}},[t._v("#")]),t._v(" 基本命令")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('1、git init\n2、git remote add origin http://192.168.10.250/t3-web-frontend/t3-web-operation.git\n拉取远程分支\n3、git fetch origin dev-xxx\n 根据远程分支创建本地分支,并切换到当前分支\n4、git checkout -b dev20190622 origin/dev-xxx\n\n修改代码\n6、git status\n7、git add vue.config.js\n8、git diff vue.config.js\n9、git commit -m "注释"\n推送远程\n10、git push origin dev20190622:dev-xxx\n11、git log\n12、git checkout dev20190623\n\ngit push <远程主机名> <本地分支名>  <远程分支名>\n例如 git push origin master：refs/for/master ，\n即是将本地的master分支推送到远程主机origin上的对应master分支， origin 是远程主机名，\n\n第一个master是本地分支名，第二个master是远程分支名。\n\n    1.1 git push origin master\n\n    如果远程分支被省略，如上则表示将本地分支推送到与之存在追踪关系的远程分支\n    （通常两者同名），如果该远程分支不存在，则会被新建\n\n     1.2 git push origin ：refs/for/master \n\n　　如果省略本地分支名，则表示删除指定的远程分支，\n　　因为这等同于推送一个空的本地分支到远程分支，等同于 git push origin --delete master\n\n    1.3 git push origin\n\n　　 如果当前分支与远程分支存在追踪关系，则本地分支和远程分支都可以省略，\n　　 将当前分支推送到origin主机的对应分支 \n\n　1.4 git push\n\n　　如果当前分支只有一个远程分支，那么主机名都可以省略，形如 git push，可以使用git branch -r ，查看远程的分支名\n\n')])])]),a("h2",{attrs:{id:"移除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移除"}},[t._v("#")]),t._v(" 移除")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("移除cache 状态, \ngit rm --cache 文件名\n\n移除cache 状态, 并直接删除\ngit rm -f 文件名\n\n")])])]),a("h2",{attrs:{id:"撤销"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#撤销"}},[t._v("#")]),t._v(" 撤销")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("取消暂存的文件\ngit reset HEAD 文件名1 文件名2 ...\n\n撤消对文件的修改\ngit checkout -- 文件名\n")])])]),a("h2",{attrs:{id:"分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[t._v("#")]),t._v(" 分支")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("查看远程分支\ngit branch -r\n\n创建分支\ngit branch 分支名\n\n删除分支\ngit branch -D 分支名\n\n切换分支\ngit checkout 分支名\n\n创建和切换合起来\ngit checkout -b iss53\n相等于\n$ git branch iss53\n$ git checkout iss53\n\n合并分支\ngit merge 覆盖分支名\n\n如果有冲突, 先解决冲突,然后commit\n\n\n需要查看每一个分支的最后一次提交\ngit branch -v \n\n创建一个本地分支跟踪远程分支:\n1. serverfix 分支上工作，可以将其建立在远程跟踪分支之上\ngit checkout -b serverfix origin/serverfix\n\n2. 快捷方式\ngit checkout --track origin/serverfix\n\n如果想要将本地分支与远程分支设置为不同名字\ngit checkout -b 别名 origin/serverfix\n\n⭐️\n设置已有的本地分支跟踪一个刚刚拉取下来的远程分支，或者想要修改正在跟踪的上游分支，\n你可以在任意时间使用 -u 或 --set-upstream-to 选项运行 git branch 来显式地设置。\n\n$ git branch -u origin/serverfix\n\n\n想要查看设置的所有跟踪分支，可以使用 git branch 的 -vv 选项。 \n这会将所有的本地分支列出来并且包含更多的信息，\n如每一个分支正在跟踪哪个远程分支与本地分支是否是领先、落后\ngit branch -vv\n\n\ngit pull 大多数情况等于 git fetch + git merge\n\n删除远程分支\ngit push origin --delete 分支名\n\n\n")])])]),a("h2",{attrs:{id:"tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[t._v("#")]),t._v(" tag")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("查询tag\ngit tag\n\n关键字查询tag\ngit tag -l 'develop_v*'\n\n创建tag\ngit tag -a tag名 -m \"注释内容\"\n轻量标签: 不需要使用 -a、-s 或 -m 选项，只需要提供标签名字\n\n删除标签\ngit tag -d <tagname>\n本地tag删除了，再执行该句，删除线上tag\ngit push origin :refs/tags/v1.4-lw\n\n标签信息与对应的提交信息：\ngit show tag名\n\n基于tag 创建新分支:\ngit checkout -b 分支名 tag名\n\n拉取远程tag\ngit fetch origin tag tag名\n\n推送tag到远程\ngit push origin --tags\n\n")])])]),a("h2",{attrs:{id:"git-别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-别名"}},[t._v("#")]),t._v(" git 别名")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git config --global alias.co checkout\n$ git config --global alias.br branch\n$ git config --global alias.ci commit\n$ git config --global alias.st status\n\n取消暂存文件\ngit config --global alias.unstage 'reset HEAD --'\n\n$ git config --global alias.last 'log -1 HEAD'\n\n演示将 git visual 定义为 gitk 的别名：\n$ git config --global alias.visual '!gitk'\n\n取消别名\ngit config --global --unset alias.st\n\n")])])]),a("p",[t._v("git config --list")])])}),[],!1,null,null,null);n.default=e.exports}}]);